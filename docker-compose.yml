version: '3'

services:

  ################################################################
  # reverse-proxy service definition
  reverse-proxy:
    restart: always

    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api
      - --providers.docker
      - --certificatesresolvers.le.acme.email=guillermoalvarado89@gmail.com
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      #- --certificatesresolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory

    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json

    networks:
      - backend

    labels:
      # Debug 
      #- --log.level=DEBUG
      # Dashboard
      - traefik.http.routers.traefik.rule=Host(`traefik.covidmex.live`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=le
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.middlewares=authtraefik
      - traefik.http.middlewares.authtraefik.basicauth.users=admin:$$apr1$$B0tBWigX$$pKr/ibQVrwBoNfjLRT29i/
      # global redirect to https
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      # middleware redirect
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      

  ################################################################
  # covidmex service definition
  covidmex:
    restart: always
    image: covidmex:latest
    build:
      context: .
      dockerfile: Dockerfile.covidmex

    env_file: ./environment.env


    depends_on:
      - covidmex-mysql

    networks:
      - backend

    labels:
      - traefik.http.routers.covidmex.rule=Host(`covidmex.live`)
      - traefik.http.routers.covidmex.tls.certresolver=le
      - traefik.http.routers.covidmex.tls=true
      - traefik.http.routers.covidmex.entrypoints=websecure
      - traefik.http.routers.covidmex.middlewares=test-compress,testheader
      # gzip compression
      - traefik.http.middlewares.test-compress.compress=true
      # Enable cache
      - traefik.http.middlewares.testheader.headers.accesscontrolmaxage=31536000


  ################################################################
  # covidmex-nginx service definition
  covidmex-nginx:
    restart: always
    image: nginx:1.17-alpine

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./covidmex/static/:/static

    depends_on:
      - covidmex

    networks:
      - backend

    labels:
      - traefik.http.routers.nginx.rule=(Host(`covidmex.live`) && PathPrefix(`/static`))
      - traefik.http.routers.nginx.tls.certresolver=le
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.entrypoints=websecure

  ################################################################
  # covidmex-mysql service definition
  covidmex-mysql:
    restart: always
    image: mysql:8.0
    command: mysqld --default-authentication-plugin=mysql_native_password

    env_file: ./environment.env

    networks:
      - backend

networks:
  backend:
    driver: bridge